#!/usr/bin/env bash
version="v2.0-beta.4"

main(){
    echo "\
GUR $version -GPL v3
Usage: gur [OPTION]
Try 'gur -h' for more information.\
"
}

gurhelp(){
echo "GUR $version -GPL v3
Usage: gur [OPTION]
Example: gur -u

Options:
    -h > shows help/info
    -u > checks usage and logs into file
    -t > sets time intervals for usage records
    -k > kills a time interval
    -c > clears all logs"
}

timeprompt(){
read -p "How often would you like to record your usage?(in seconds, i.e. 60 = 1 minute) 
\
" timedelay
}

timekill(){
read -p "This will kill all bash processes, are you sure you want to do stop the time interval?(y/n)" timekillconf
if [ $timekillconf == "y" ]; then 
    ( killall bash )&
else
    echo "ok";
fi
}

timedusage(){
    timeprompt
( while [[ $timedelay != "" ]]; do
        usage
        sleep $timedelay
done )&
}

online-check() {
wget https://google.com --quiet --output-document=tmpindex.html;
if [ tmpindex.html == "" ]; then
    echo "\
You appear to be offline" >> "$HOME/usage/$date/$record.txt";
else
    echo "\
You appear to be online" >> "$HOME/usage/$date/$record.txt";
fi
rm tmpindex.html;
}

delete-logs() {
read -p "Are you sure you wan't to clear all logs? This will perminatly delete all usage records (y/n)" deleteconfirm;
if [ $deleteconfirm == "y" ]; then
    echo "deleting all logs...";
    rm -rf $HOME/usage/*;
    echo "done";
else
    echo "ok, exiting now";
fi 
}

usage() {
date=$(date +%F);
record=$(date +%H:%M:%S);
if [ ! -d "$HOME/usage" ]; then
    mkdir "$HOME/usage";
fi
if [ ! -d "$HOME/usage/$date" ]; then
    mkdir "$HOME/usage/$date";
fi
if [ -f "$HOME/usage/$date/$record.txt" ]; then
    rm "$HOME/usage/$date/$record.txt";
fi
touch $HOME/usage/$date/$record.txt
file="$HOME/usage/$date/$record.txt"
echo $(date) >> "$file"
echo "
\
memory info:_________________________________________________________
\
" >> "$file"
sed -n '1,7p' /proc/meminfo >> "$file"
echo "
\
CPU info:____________________________________________________________
\
" >> "$file"
echo "All cpu stats: " >> "$file"
top -bn1 | sed -n 3p >> "$file"
echo "Average: " >> "$file"
top -bn1 | grep "Cpu(s)" | \
    sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | \
    awk '{print 100 - $1"%"}' >> "$file"

echo "
storage space:_______________________________________________________
\
" >> "$file"
df -h | sed -n 1,2p | cut -c 1-10,50-100 >> "$file"
echo " 

top procceses:_______________________________________________________
" >> "$file"
ps -eo pcpu,pmem,pid,user,args | sort -r -k1 | less | sed -n '1,11p' >> "$file"
echo "
\
Network:_____________________________________________________________
\
" >> "$file"
( online-check )&
/sbin/ifconfig |grep -B1 "inet addr" >> "$file"
if [[ $timedelay == "" ]];then
echo "Your usage has been recorded in ~/usage/$date/$record.txt";
fi
}

if [[ $1 == "" ]]; then
    main
elif [[ $1 == -h ]]; then
    gurhelp
elif [[ $1 == -u ]]; then
    usage
elif [[ $1 == -t ]]; then
    timedusage
elif [[ $1 == -k ]]; then
    timekill
elif [[ $1 == -c ]]; then
    delete-logs
else
    gurhelp
fi
